@model BTLWebMVC.Models.Employee

@{
    ViewBag.Title = "Sửa Nhân Viên";
    Layout = "~/Views/Shared/Layoutmanager.cshtml";
}

<style>
    .content-wrapper {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .form-control, .form-select {
        border-radius: 5px;
        transition: border-color 0.2s;
    }

        .form-control:focus, .form-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

    .btn-primary {
        background: #007bff;
        border: none;
        border-radius: 5px;
        transition: transform 0.2s;
    }

        .btn-primary:hover {
            background: #0056b3;
            transform: scale(1.05);
        }

    .btn-secondary {
        border-radius: 5px;
        transition: transform 0.2s;
    }

        .btn-secondary:hover {
            transform: scale(1.05);
        }

    .text-danger {
        font-size: 0.9em;
    }
</style>

<div class="content-wrapper">
    <div class="container mt-4">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h4><i class="fas fa-user-edit mr-2"></i>Sửa Nhân Viên</h4>
            </div>
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.EmployeeID)
                    @Html.HiddenFor(model => model.AccountID)

                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Họ</label>
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập họ" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Tên</label>
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập tên" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Ngày sinh</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.BirthDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Ngày thuê</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.HireDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                            @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Địa chỉ</label>
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập địa chỉ" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Thành phố</label>
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập thành phố" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Mã bưu điện</label>
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập mã bưu điện" } })
                            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Quốc gia</label>
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập quốc gia" } })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Số điện thoại</label>
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập số điện thoại", type = "tel", maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Email</label>
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập email" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-2 col-form-label">Vai trò</label>
                        <div class="col-sm-10">
                            <select name="Role" class="form-select">
                                <option value="Admin" @(Model.Account != null && Model.Account.Role == "Admin" ? "selected" : "")>Quản trị viên</option>
                                <option value="Employee" @(Model.Account != null && Model.Account.Role == "Employee" ? "selected" : "")>Nhân viên</option>
                            </select>
                            @Html.ValidationMessage("Role", "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <div class="offset-sm-2 col-sm-10">
                            <button type="submit" class="btn btn-primary"><i class="fas fa-save mr-2"></i>Lưu</button>
                            @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-secondary ml-2" })
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            console.log("Initial Role Value: ", $("#Role").val());
            console.log("Server Debug: @ViewBag.DebugMessage");
            $("#Role").change(function () {
                console.log("Role Changed To: ", $(this).val());
            });
            setTimeout(function () {
                console.log("Final Role Value after all scripts: ", $("#Role").val());
            }, 1000);
        });


        document.addEventListener("DOMContentLoaded", function () {
            const phoneInput = document.querySelector("input[name='Phone']");
            phoneInput.addEventListener("input", function () {
                this.value = this.value.replace(/\D/g, '').slice(0, 10);
            });
        });
    </script>
}