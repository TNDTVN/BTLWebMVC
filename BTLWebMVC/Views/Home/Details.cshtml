@model BTLWebMVC.Models.Product
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/LayoutUsers.cshtml";
}
<link rel="stylesheet" href="~/Content/styles/single_styles.css" />
<link rel="stylesheet" href="~/Content/styles/single_responsive.css" />
@{
    var images = ViewBag.Images as List<BTLWebMVC.Models.Image>;
}
<div class="container single_product_container">
    <div class="row">
        <div class="col">
            <div class="breadcrumbs d-flex flex-row align-items-center">
                <ul>
                    <li><a href="@Url.Action("Index","Home")">Nhà</a></li>
                    <li><a href="@Url.Action("categories","Home", new { categoryId = Model.CategoryID })"><i class="fa fa-angle-right" aria-hidden="true"></i>@Model.Category.CategoryName</a></li>
                    <li class="active"><a href="@Url.Action("Details","Home", new { id = Model.ProductID})"><i class="fa fa-angle-right" aria-hidden="true"></i>@Model.ProductName</a></li>
                </ul>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-lg-7">
            <div class="single_product_pics">
                <div class="row">
                    <div class="col-lg-3 thumbnails_col order-lg-1 order-2">
                        <div class="single_product_thumbnails">
                            <ul id="thumbnail-list">
                                @if (images != null && images.Any())
                                {
                                    foreach (var image in images.Take(3))
                                    {
                                        <li class="thumbnail-item @(image == images.First() ? "active" : "")"
                                            data-image="@Url.Content("~/Content/Images/" + image.ImageName)">
                                            <img src="@Url.Content("~/Content/Images/" + image.ImageName)" alt="Ảnh sản phẩm">
                                        </li>
                                    }
                                }
                                else
                                {
                                    <li class="thumbnail-item active" data-image="~/Content/Images/default.jpg">
                                        <img src="~/Content/Images/default.jpg" alt="Default Image">
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="col-lg-9 image_col order-lg-2 order-1">
                        <div class="single_product_image">
                            <div id="main-image" class="single_product_image_background"
                                 style="background-image:url('@Url.Content("~/Content/Images/" + (images?.FirstOrDefault()?.ImageName ?? "default.jpg"))')">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-5">
            <div class="product_details">
                <div class="product_details_title">
                    <h2>@Model.ProductName</h2>
                    <p>@Model.ProductDescription</p>
                </div>
                <div class="free_delivery d-flex flex-row align-items-center justify-content-center">
                    <span class="ti-truck"></span><span></span>
                </div>
                <div class="original_price">@*$629.99*@</div>
                <div class="product_price">@Model.UnitPrice.ToString("N0") VND</div>
                <ul class="star_rating">
                    @*<li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star-o" aria-hidden="true"></i></li>*@
                </ul>
                <div class="product_color">
                    @{
                        var unitinstock = Model.UnitsInStock != 0 ? Model.UnitsInStock.ToString() : "<span class='text-danger fw-bold'>Hết Hàng</span>";
                    }
                    <span>Số lượng hàng tồn: @Html.Raw(unitinstock)</span>
                </div>
                <div class="product_color">
                    <span>Đơn vị trên sản phẩm: @Model.QuantityPerUnit</span>
                    @*<span>Select Color:</span>
                    <ul>
                        <li style="background: #e54e5d"></li>
                        <li style="background: #252525"></li>
                        <li style="background: #60b3f3"></li>
                    </ul>*@
                </div>
                <div class="quantity d-flex flex-column flex-sm-row align-items-sm-center">
                    <span>Số Lượng:</span>
                    <div class="quantity_selector">
                        <span class="minus"><i class="fa fa-minus" aria-hidden="true"></i></span>
                        <span id="quantity_value">1</span>
                        <span class="plus"><i class="fa fa-plus" aria-hidden="true"></i></span>
                    </div>
                    <div class="red_button add_to_cart_button"><a href="#">Thêm Vào Giỏ Hàng</a></div>
                    <div class="red_button back_button mt-2 mt-sm-0">
                        <a href="@ViewBag.ReturnUrl" class="text-white">Trở Về</a>
                    </div>
                    @*<div class="product_favorite d-flex flex-column align-items-center justify-content-center"></div>*@
                </div>
            </div>
        </div>
    </div>

</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const thumbnails = document.querySelectorAll("#thumbnail-list .thumbnail-item");
        const mainImage = document.getElementById("main-image");

        thumbnails.forEach(thumbnail => {
            thumbnail.addEventListener("click", function () {
                thumbnails.forEach(item => item.classList.remove("active"));

                thumbnail.classList.add("active");

                const imageUrl = thumbnail.getAttribute("data-image");
                mainImage.style.backgroundImage = `url('${imageUrl}')`;
            });
        });
    });
    document.addEventListener("DOMContentLoaded", function () {
        const minusBtn = document.querySelector(".minus");
        const plusBtn = document.querySelector(".plus");
        const quantityValue = document.getElementById("quantity_value");
        const addToCartButton = document.querySelector(".add_to_cart_button");

        let quantity = 1;

        function updateButtonVisibility() {
            console.log("Quantity:", quantity);
            console.log("Button display:", quantity > 0 ? "inline-block" : "none");
            addToCartButton.style.display = quantity > 0 ? "inline-block" : "none";
        }

        plusBtn.addEventListener("click", function () {
            quantity++;
            quantityValue.textContent = quantity;
            updateButtonVisibility();
        });

        minusBtn.addEventListener("click", function () {
            if (quantity > 1) {
                quantity--;
                quantityValue.textContent = quantity;
                updateButtonVisibility();
            }
        });

        updateButtonVisibility();
    });

</script>