@model List<BTLWebMVC.Models.Product>
@using PagedList.Mvc;
@using PagedList;
@{
    Layout = "~/Views/Shared/LayoutUsers.cshtml";
    ViewBag.Title = "Home Page";
}

<div class="main_slider" style="background-image: url('@Url.Content("~/Content/Images/slider.jpg")');">
    <div class="container fill_height">
        <div class="row align-items-center fill_height">
            <div class="col">
                <div class="main_slider_content">
                    <h6>Bộ Sưu Tập Công Nghệ Mới 2025</h6>
                    <h1 style="color:red">Giảm Đến 30% Cho Sản Phẩm Mới Nhất</h1>
                    <div class="red_button shop_now_button"><a href="#">shop now</a></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="new_arrivals">
    <div class="container">
        <div class="row">
            <div class="col text-center">
                <div class="section_title new_arrivals_title">
                    <h2 id="new-arrivals">Sản Phẩm Mới</h2>
                </div>
            </div>
        </div>
        <div class="row align-items-center">
            <div class="col text-center">
                <div class="new_arrivals_sorting">
                    <ul class="arrivals_grid_sorting clearfix button-group filters-button-group">
                        <li class="grid_sorting_button button d-flex flex-column justify-content-center align-items-center active is-checked"
                            data-category-id=""
                            data-filter="*">all</li>
                        @foreach (var category in ViewBag.Categories)
                        {
                            <li class="grid_sorting_button button d-flex flex-column justify-content-center align-items-center @(ViewBag.SelectedCategory == category.CategoryID ? "active is-checked" : "")"
                                data-category-id="@category.CategoryID"
                                data-filter=".category-@category.CategoryID">
                                @category.CategoryName
                            </li>
                        }
                        <li class="grid_sorting_button button d-flex flex-column justify-content-center align-items-center view-more">
                            <a href="@Url.Action("Categories", "Home")" style="text-decoration: none; color: inherit;">Xem thêm</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div id="product-container">
                    @Html.Partial("GetProducts", Model)
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .product-grid {
        display: flex;
        flex-wrap: wrap;
    }
</style>

@section scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.min.js"></script>
    <script>
        $(document).ready(function () {
            var $grid = $('.product-grid').isotope({
                itemSelector: '.product-item',
                layoutMode: 'fitRows'
            });

            $('.grid_sorting_button:not(.view-more)').click(function (e) {
                e.preventDefault();
                $('.grid_sorting_button').removeClass('active is-checked');
                $(this).addClass('active is-checked');

                var categoryId = $(this).data('category-id');

                $('#product-container').addClass('product-container-loading');

                $.ajax({
                    url: '@Url.Action("GetProducts", "Home")',
                    type: 'GET',
                    data: { categoryId: categoryId },
                    success: function (data) {
                        $('#product-container').html(data).removeClass('product-container-loading');

                        if ($grid.length) {
                            $grid.isotope('reloadItems').isotope();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("Error: " + error);
                        console.log("Status: " + status);
                        console.log("Response: " + xhr.responseText);
                        $('#product-container').removeClass('product-container-loading');
                    }
                });
            });

            $('.view-more a').click(function (e) {
                e.stopPropagation();
                window.location.href = $(this).attr('href');
            });
        });
    </script>
}