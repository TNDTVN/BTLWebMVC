@model List<BTLWebMVC.Models.Order>
@using System.Web

@{
    ViewBag.Title = "Thống kê đơn hàng";
    Layout = "~/Views/Shared/Layoutmanager.cshtml";
}

<div class="content-wrapper">
    <div style="margin:0.4cm;">
        <h2 class="mb-4">Thống kê đơn hàng</h2>

        <!-- Dropdown lọc -->
        <div class="mb-3">
            <label for="filterType">Kiểu thống kê:</label>
            <select name="filterType" id="filterType" class="form-control d-inline-block" style="width: 150px;">
                <option value="Month" @(ViewBag.FilterType == "Month" ? "selected" : "")>Theo tháng</option>
                <option value="Year" @(ViewBag.FilterType == "Year" ? "selected" : "")>Theo năm</option>
            </select>
            <label for="month" id="monthLabel" style="display: @(ViewBag.FilterType == "Month" ? "inline" : "none");">Chọn tháng:</label>
            <select name="month" id="month" class="form-control d-inline-block" style="width: 100px; display: @(ViewBag.FilterType == "Month" ? "inline" : "none");">
                @for (int i = 1; i <= 12; i++)
                {
                    <option value="@i" @(ViewBag.SelectedMonth == i ? "selected" : "")>@i</option>
                }
            </select>
            <label for="year">Chọn năm:</label>
            <select name="year" id="year" class="form-control d-inline-block" style="width: 120px;">
                @for (int i = DateTime.Now.Year - 5; i <= DateTime.Now.Year + 5; i++)
                {
                    <option value="@i" @(ViewBag.SelectedYear == i ? "selected" : "")>@i</option>
                }
            </select>
            <button id="exportExcelBtn" class="btn btn-success ml-3"><i class="fas fa-file-excel"></i> Xuất Excel</button>
        </div>

        <!-- Card thống kê -->
        <div class="row">
            <div class="col-lg-3 col-6">
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3 id="orderCount">@ViewBag.OrderCount</h3>
                        <p>Số đơn hàng</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-bag"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3 id="revenue">@(ViewBag.Revenue != null ? String.Format("{0:N0} VND", ViewBag.Revenue) : "0 VND")</h3>
                        <p>Doanh thu</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-stats-bars"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3 id="customerCount">@ViewBag.CustomerCount</h3>
                        <p>Số khách hàng</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-person-add"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-danger">
                    <div class="inner">
                        <h3 id="productCount">@ViewBag.ProductCount</h3>
                        <p>Số sản phẩm bán ra</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-pie-graph"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
        </div>

        <!-- Bảng thống kê -->
        <div class="card shadow-sm">
            <div class="card-header">
                <h3 class="card-title">Danh sách đơn hàng @(ViewBag.FilterType == "Month" ? "tháng " + ViewBag.SelectedMonth + "/" + ViewBag.SelectedYear : "năm " + ViewBag.SelectedYear)</h3>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead class="thead-light">
                            <tr>
                                <th>Mã đơn hàng</th>
                                <th>Khách hàng</th>
                                <th>Nhân viên</th>
                                <th>Ngày đặt</th>
                                <th>Tổng tiền</th>
                                <th>Ghi chú</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Any())
                            {
                                foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.OrderID)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Customer.ContactName)</td>
                                        <td>@(item.Employee != null ? item.Employee.FirstName + " " + item.Employee.LastName : "Chưa phân công")</td>
                                        <td>@item.OrderDate.ToString("dd/MM/yyyy")</td>
                                        <td>@String.Format("{0:N0}", item.OrderDetails.Sum(od => od.Quantity * od.UnitPrice)) VND</td>
                                        <td>@(string.IsNullOrEmpty(item.Notes) ? "Không có" : item.Notes)</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6" class="text-center">Không có dữ liệu đơn hàng.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Biểu đồ -->
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Doanh thu <span id="revenueChartTitle">@(ViewBag.FilterType == "Month" ? "theo ngày" : "theo tháng") @(ViewBag.FilterType == "Month" ? ViewBag.SelectedMonth + "/" : "")@ViewBag.SelectedYear</span></h3>
                    </div>
                    <div class="card-body">
                        @if (ViewBag.ChartData != null && ((IEnumerable<object>)ViewBag.ChartData).Any())
                        {
                            <canvas id="revenueOnlyChart" style="height: 260px; max-height: 260px; display: block;"></canvas>
                        }
                        else
                        {
                            <p class="text-center">Không có dữ liệu để hiển thị biểu đồ doanh thu.</p>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Số đơn hàng <span id="orderChartTitle">@(ViewBag.FilterType == "Month" ? "theo ngày" : "theo tháng") @(ViewBag.FilterType == "Month" ? ViewBag.SelectedMonth + "/" : "")@ViewBag.SelectedYear</span></h3>
                    </div>
                    <div class="card-body">
                        @if (ViewBag.ChartData != null && ((IEnumerable<object>)ViewBag.ChartData).Any())
                        {
                            <canvas id="orderCountChart" style="height: 260px; max-height: 260px; display: block;"></canvas>
                        }
                        else
                        {
                            <p class="text-center">Không có dữ liệu để hiển thị biểu đồ số đơn hàng.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var xAxisLabel = '@Html.Raw(ViewBag.FilterType == "Month" ? "Ngày" : "Tháng")';
        $(document).ready(function () {
            let revenueOnlyChart, orderCountChart;

            // Hàm khởi tạo biểu đồ doanh thu
            function initRevenueChart(chartData) {
                if (revenueOnlyChart) {
                    revenueOnlyChart.destroy();
                }

                var labels = chartData.map(function (item) { return item ? item.period : null; }).filter(item => item !== null);
                var revenueData = chartData.map(function (item) { return item ? item.revenue : null; }).filter(item => item !== null);

                console.log('Revenue Chart - Labels:', labels, 'Data:', revenueData); // Debug

                var ctx = document.getElementById('revenueOnlyChart');
                if (!ctx) {
                    console.error('Revenue chart canvas not found');
                    return;
                }
                ctx = ctx.getContext('2d');

                revenueOnlyChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Doanh thu (VNĐ)',
                            data: revenueData,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: { display: true, text: 'Doanh thu (VNĐ)' },
                                ticks: { font: { size: 10 } }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: xAxisLabel
                                },
                                ticks: { font: { size: 10 } }
                            }
                        },
                        plugins: {
                            legend: {
                                labels: { font: { size: 10 } }
                            }
                        }
                    }
                });
                console.log('Revenue chart initialized');
            }

            // Hàm khởi tạo biểu đồ số đơn hàng
            function initOrderCountChart(chartData) {
                if (orderCountChart) {
                    orderCountChart.destroy();
                }

                var labels = chartData.map(function (item) { return item ? item.period : null; }).filter(item => item !== null);
                var orderData = chartData.map(function (item) { return item ? item.orderCount : null; }).filter(item => item !== null);

                console.log('Order Chart - Labels:', labels, 'Data:', orderData); // Debug

                var ctx = document.getElementById('orderCountChart');
                if (!ctx) {
                    console.error('Order chart canvas not found');
                    return;
                }
                ctx = ctx.getContext('2d');

                orderCountChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Số đơn hàng',
                            data: orderData,
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: { display: true, text: 'Số đơn hàng' },
                                ticks: { font: { size: 10 } }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: xAxisLabel
                                },
                                ticks: { font: { size: 10 } }
                            }
                        },
                        plugins: {
                            legend: {
                                labels: { font: { size: 10 } }
                            }
                        }
                    }
                });
                console.log('Order chart initialized');
            }

            // Khởi tạo biểu đồ ban đầu
            var initialChartData = @Html.Raw(Json.Encode(ViewBag.ChartData));
            console.log('Initial Chart Data:', initialChartData); // Debug
            if (initialChartData && Array.isArray(initialChartData) && initialChartData.length > 0 && initialChartData.some(item => item && item.period !== undefined)) {
                initRevenueChart(initialChartData);
                initOrderCountChart(initialChartData);
                $('#revenueOnlyChart, #orderCountChart').css('display', 'block');
                $('#revenueOnlyChart').parent().find('p').hide();
                $('#orderCountChart').parent().find('p').hide();
            } else {
                console.warn('No valid chart data for initial render');
                if (revenueOnlyChart) revenueOnlyChart.destroy();
                if (orderCountChart) orderCountChart.destroy();
                $('#revenueOnlyChart, #orderCountChart').css('display', 'none');
                $('#revenueOnlyChart').parent().find('p').show();
                $('#orderCountChart').parent().find('p').show();
            }

            // Xử lý thay đổi dropdown
            $('#filterType').on('change', function () {
                var filterType = $(this).val();
                if (filterType === 'Month') {
                    $('#month, #monthLabel').show();
                } else {
                    $('#month, #monthLabel').hide();
                }
                updateData();
            });

            $('#month, #year').on('change', function () {
                updateData();
            });

            function updateData() {
                var filterType = $('#filterType').val();
                var month = $('#month').val();
                var year = $('#year').val();

                $.ajax({
                    url: '@Url.Action("GetChartData", "Statistics")',
                    type: 'POST',
                    data: { filterType: filterType, month: month, year: year },
                    success: function (response) {
                        console.log('AJAX Response:', response); // Debug
                        if (response.success && response.chartData && Array.isArray(response.chartData) && response.chartData.length > 0 && response.chartData.some(item => item && item.period !== undefined)) {
                            initRevenueChart(response.chartData);
                            initOrderCountChart(response.chartData);
                            $('#revenueOnlyChart, #orderCountChart').css('display', 'block');
                            $('#revenueOnlyChart').parent().find('p').hide();
                            $('#orderCountChart').parent().find('p').hide();
                        } else {
                            console.warn('No valid chart data in AJAX response');
                            if (revenueOnlyChart) revenueOnlyChart.destroy();
                            if (orderCountChart) orderCountChart.destroy();
                            $('#revenueOnlyChart, #orderCountChart').css('display', 'none');
                            $('#revenueOnlyChart').parent().find('p').show();
                            $('#orderCountChart').parent().find('p').show();
                        }

                        // Cập nhật card (reload trang để lấy dữ liệu card mới)
                        var url = '@Url.Action("Index", "Statistics")?filterType=' + filterType + '&month=' + month + '&year=' + year;
                        window.history.pushState({}, '', url);
                        window.location.href = url;
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error:', error); // Debug
                        alert('Có lỗi xảy ra khi lấy dữ liệu!');
                    }
                });
            }

            // Xử lý nút xuất Excel
            $('#exportExcelBtn').click(function () {
                var filterType = $('#filterType').val();
                var month = $('#month').val();
                var year = $('#year').val();

                $.ajax({
                    url: '@Url.Action("ExportToExcel", "Statistics")',
                    type: 'POST',
                    data: { filterType: filterType, month: month, year: year },
                    xhrFields: {
                        responseType: 'blob'
                    },
                    success: function (data, status, xhr) {
                        var blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                        var link = document.createElement('a');
                        link.href = window.URL.createObjectURL(blob);
                        link.download = filterType === 'Month' ? `ThongKeDonHang_Thang${month}_${year}.xlsx` : `ThongKeDonHang_Nam${year}.xlsx`;
                        link.click();
                    },
                    error: function () {
                        alert('Có lỗi xảy ra khi xuất file Excel!');
                    }
                });
            });
        });
    </script>
}