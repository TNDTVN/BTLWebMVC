@model BTLWebMVC.Models.Account

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Layoutmanager.cshtml";
}

<div class="content-wrapper">
    <div class="container py-4">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h2 class="mb-0">Sửa tài khoản</h2>
            </div>

            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        @using (Html.BeginForm("Edit", "Accounts", FormMethod.Post, new { enctype = "multipart/form-data", id = "editForm" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })
                            @Html.HiddenFor(model => model.AccountID)

                            <div class="form-horizontal">
                                <h4>Account</h4>
                                <hr />

                                <div class="form-group">
                                    <label>Tài khoản</label>
                                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label>Mật khẩu</label>
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label>Email</label>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label>Vai trò</label>
                                    @Html.DropDownList("Role", ViewBag.Role as SelectList, "Chọn vai trò", new { @class = "form-control custom-select", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label>Trạng thái</label>
                                    @Html.DropDownListFor(model => model.IsLock, new SelectList(new[]
                                    {
                                        new { Value = "true", Text = "Hoạt động" },
                                        new { Value = "false", Text = "Khóa" }
                                    }, "Value", "Text", Model.IsLock), new { @class = "form-control custom-select" })
                                    @Html.ValidationMessageFor(model => model.IsLock, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group align-items-center mt-3">
                                    @Html.ActionLink("Quay lại danh sách", "Index", null, new { @class = "btn btn-secondary" })
                                    <input type="submit" value="Lưu" class="btn btn-primary" />
                                </div>
                            </div>
                        }
                    </div>

                    <div class="col-md-4 d-flex flex-column align-items-center">
                        <div class="text-center">
                            @if (!string.IsNullOrEmpty(Model.ProfileImage))
                            {
                                <img id="previewImage" src="@Url.Content(Model.ProfileImage)" alt="Profile Image" class="img-fluid rounded shadow-sm" style="max-height:300px;" />
                            }
                            else
                            {
                                <span>Chưa có ảnh đại diện</span>
                            }
                        </div>

                        <div class="form-group mt-3">
                            <label for="FileAnh">Tải lên ảnh đại diện</label>
                            <div class="custom-file">
                                <input type="file" class="custom-file-input" id="FileAnh" name="FileAnh" accept="image/*" onchange="previewImage(event)" required>
                                <label class="custom-file-label" for="FileAnh">Chọn file</label>
                            </div>
                            @Html.ValidationMessageFor(model => model.ProfileImage, "", new { @class = "text-danger" })
                            <div id="fileError" class="text-danger"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function previewImage(event) {
            var reader = new FileReader();
            reader.onload = function () {
                var output = document.getElementById('previewImage');
                output.src = reader.result;
            };
            if (event.target.files[0]) {
                console.log("File được chọn: " + event.target.files[0].name + ", Kích thước: " + event.target.files[0].size + " bytes");
                reader.readAsDataURL(event.target.files[0]);
            } else {
                console.log("Không có file được chọn trong previewImage.");
            }
        }

        document.querySelector('.custom-file-input').addEventListener('change', function (e) {
            var fileName = e.target.files[0] ? e.target.files[0].name : 'Chọn file';
            e.target.nextElementSibling.innerHTML = fileName;
            console.log("File được chọn (change event): " + fileName);
        });

        $(document).ready(function () {
            $('#editForm').on('submit', function (e) {
                var fileInput = $('#FileAnh');
                var file = fileInput[0].files[0];
                if (!file) {
                    console.log("Không có file được chọn khi submit form.");
                    $('#fileError').text('Vui lòng chọn một file ảnh.');
                    e.preventDefault();
                    return false;
                }
                // Kiểm tra kích thước file (tối đa 10MB)
                if (file.size > 10 * 1024 * 1024) {
                    console.log("File quá lớn: " + file.size + " bytes");
                    $('#fileError').text('File ảnh không được lớn hơn 10MB.');
                    e.preventDefault();
                    return false;
                }
                console.log("Form được submit, file: " + file.name + ", kích thước: " + file.size + " bytes");
            });
        });
    </script>
}