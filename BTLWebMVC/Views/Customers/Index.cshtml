@model PagedList.IPagedList<BTLWebMVC.Models.Customer>
@using PagedList.Mvc
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Layoutmanager.cshtml";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<style>
    .content-wrapper {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .table thead th {
        background: #007bff;
        color: white;
        text-align: center;
    }

    .table tbody tr:hover {
        background: #e9ecef;
        transform: scale(1.01);
        transition: all 0.2s;
    }

    .btn-sm {
        padding: 5px 10px;
        transition: transform 0.2s;
    }

        .btn-sm:hover {
            transform: scale(1.1);
        }

    .pagination .page-link {
        border-radius: 5px;
        margin: 0 3px;
        color: #007bff;
    }

    .pagination .page-item.active .page-link {
        background: #007bff;
        border-color: #007bff;
    }

    .pagination .page-link:hover {
        background: #0056b3;
        color: white;
    }

    .toast {
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

        .toast.bg-success {
            background: linear-gradient(45deg, #28a745, #34c759);
        }

        .toast.bg-danger {
            background: linear-gradient(45deg, #dc3545, #e4606d);
        }

    .modal-content {
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        background: #007bff;
        color: #ffffff !important;
        border-radius: 10px 10px 0 0;
    }

        .modal-header.bg-danger {
            background: #dc3545;
            color: #ffffff !important;
        }

        .modal-title, .modal-header .close, .modal-header .close span {
            color: #ffffff !important;
        }
</style>

<div class="content-wrapper">
    <div style="margin:0.3cm;">
        @Html.AntiForgeryToken()
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2 class="mb-4">Danh sách khách hàng</h2>
            <a href="@Url.Action("Create", "Customers")" class="btn btn-success"><i class="fas fa-plus mr-2"></i>Thêm mới</a>
        </div>
        <div class="card shadow-sm">
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead class="thead-light" style="white-space: nowrap;">
                        <tr>
                            <th>Tài khoản</th>
                            <th>Tên khách hàng</th>
                            <th>Liên hệ</th>
                            <th>Địa chỉ</th>
                            <th>Quốc gia</th>
                            <th>Số điện thoại</th>
                            <th>Email</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Account.Username)</td>
                                <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                                <td>@Html.DisplayFor(modelItem => item.ContactName)</td>
                                <td>@Html.DisplayFor(modelItem => item.Address)</td>
                                <td>@Html.DisplayFor(modelItem => item.Country)</td>
                                <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                                <td style="white-space: nowrap;">
                                    <a href="@Url.Action("Edit", "Customers", new { id = item.CustomerID })" class="btn btn-primary btn-sm" title="Sửa">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    @if (ViewBag.UserRole == "Admin")
                                    {
                                        <button class="btn btn-danger btn-sm delete-btn" data-id="@item.CustomerID" data-name="@item.CustomerName" title="Xóa">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Phân trang -->
    <nav aria-label="Page navigation example" class="mt-3">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.IsFirstPage ? "disabled" : "")">
                <a class="page-link" href="@(Model.IsFirstPage ? "#" : Url.Action("Index", new { page = Model.PageNumber - 1 }))"
                   tabindex="@(Model.IsFirstPage ? "-1" : "0")"
                   aria-disabled="@(Model.IsFirstPage ? "true" : "false")">
                    <i class="fas fa-chevron-left"></i> Trang trước
                </a>
            </li>
            @{
                int maxPagesToShow = 5;
                int pagesBeforeAfter = maxPagesToShow / 2;
                int startPage = Math.Max(1, Model.PageNumber - pagesBeforeAfter);
                int endPage = Math.Min(Model.PageCount, startPage + maxPagesToShow - 1);
                if (endPage - startPage + 1 < maxPagesToShow)
                {
                    startPage = Math.Max(1, endPage - maxPagesToShow + 1);
                }
            }
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }
            <li class="page-item @(Model.IsLastPage ? "disabled" : "")">
                <a class="page-link" href="@(Model.IsLastPage ? "#" : Url.Action("Index", new { page = Model.PageNumber + 1 }))"
                   tabindex="@(Model.IsLastPage ? "-1" : "0")"
                   aria-disabled="@(Model.IsLastPage ? "true" : "false")">
                    Trang sau <i class="fas fa-chevron-right"></i>
                </a>
            </li>
        </ul>
    </nav>

    <!-- Modal Xác nhận xóa -->
    <div class="modal fade" id="deleteCustomerModal" tabindex="-1" role="dialog" aria-labelledby="deleteCustomerModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h5 class="modal-title" id="deleteCustomerModalLabel"><i class="fas fa-trash-alt mr-2"></i>Xác nhận xóa</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    Bạn có chắc muốn xóa khách hàng <strong id="deleteCustomerName"></strong>?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fas fa-times mr-2"></i>Hủy</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn"><i class="fas fa-trash mr-2"></i>Xóa</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast thông báo -->
    <div class="toast" id="notificationToast" style="position: fixed; bottom: 20px; right: 20px; min-width: 250px;" data-delay="3000">
        <div class="toast-header">
            <strong class="mr-auto" id="toastTitle"></strong>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
        </div>
        <div class="toast-body" id="toastMessage"></div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Hiển thị toast nếu có TempData
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';
            if (successMessage) {
                showToast('Thành công', successMessage, 'bg-success');
            }
            if (errorMessage) {
                showToast('Lỗi', errorMessage, 'bg-danger');
            }

            // Xử lý nút Xóa
            $('.delete-btn').click(function () {
                var id = $(this).data('id');
                var name = $(this).data('name');
                $('#deleteCustomerName').text(name);
                $('#confirmDeleteBtn').data('id', id);
                $('#deleteCustomerModal').modal('show');
            });

            $('#confirmDeleteBtn').click(function () {
                var id = $(this).data('id');
                var token = $('input[name="__RequestVerificationToken"]').val();
                if (!token) {
                    console.error("Anti-forgery token not found!");
                    showToast('Lỗi', 'Không tìm thấy token xác thực!', 'bg-danger');
                    return;
                }
                $.ajax({
                    url: '@Url.Action("Delete", "Customers")',
                    type: 'POST',
                    data: { id: id, __RequestVerificationToken: token },
                    success: function (response) {
                        $('#deleteCustomerModal').modal('hide');
                        if (response.success) {
                            showToast('Thành công', response.message, 'bg-success');
                            setTimeout(function () { location.reload(); }, 2000);
                        } else {
                            showToast('Lỗi', response.message, 'bg-danger');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error:", status, error, xhr.responseText);
                        $('#deleteCustomerModal').modal('hide');
                        var message = xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : 'Lỗi không xác định khi xóa khách hàng!';
                        showToast('Lỗi', message, 'bg-danger');
                    }
                });
            });

            // Hàm hiển thị toast
            function showToast(title, message, bgClass) {
                $('#toastTitle').text(title);
                $('#toastMessage').text(message);
                $('#notificationToast').removeClass('bg-success bg-danger').addClass(bgClass);
                $('#notificationToast').toast('show');
            }
        });
    </script>
}