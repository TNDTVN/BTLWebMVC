@model BTLWebMVC.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Layoutmanager.cshtml";
}

<div class="content-wrapper">
    <div class="container py-4">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h2 class="mb-0">Sửa sản phẩm</h2>
            </div>

            <div class="card-body">
                <div class="row">

                    <div class="col-md-8">
                        @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })
                            @Html.HiddenFor(model => model.ProductID)

                            <fieldset>



                                <div class="form-group">
                                    <label for="tf1">Tên sản phẩm</label>
                                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", id = "tf1" } })
                                    <small id="tf1Help" class="form-text text-muted">Nhập tên sản phẩm của bạn.</small>
                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                </div>


                                <div class="form-group mb-3">
                                    <label for="CategoryID" class="form-label">Danh mục sản phẩm </label>
                                    <div>
                                        @Html.DropDownList("CategoryID", null, "Chọn loại sản phẩm", new { @class = "custom-select", id = "CategoryID", required = "" })
                                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group mb-3">
                                    <label for="SupplierId" class="form-label">Nhà cung cấp</label>
                                    <div>
                                        @Html.DropDownList("SupplierId", null, "Chọn nhà cung cấp", new { @class = "custom-select", id = "SupplierId", required = "" })
                                        @Html.ValidationMessageFor(model => model.SupplierID, "", new {@class="text-danger"})
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="tf4">Số lượng</label>
                                    <div class="custom-number">
                                        @Html.EditorFor(model => model.QuantityPerUnit, new { htmlAttributes = new { @class = "form-control", id = "tf4", type = "number", min = "0", max = "1000", step = "1", value = "0" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.QuantityPerUnit, "", new { @class = "text-danger" })
                                </div>


                                <div class="form-group">
                                    <label for="tf5">Giá Đơn Vị</label>
                                    <div class="custom-number">
                                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", id = "tf5", type = "number", min = "0", step = "0.01", value = "0" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                </div>


                                <div class="form-group">
                                    <label for="tf6">Số lượng tồn kho</label>
                                    <div class="custom-number">
                                        @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control", id = "tf6", type = "number", min = "0", max = "10000", step = "1", value = "0" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
                                </div>


                                <div class="form-group">
                                    <label for="tf7">Số lượng đơn hàng</label>
                                    <div class="custom-number">
                                        @Html.EditorFor(model => model.UnitsOnOrder, new { htmlAttributes = new { @class = "form-control", id = "tf7", type = "number", min = "0", max = "10000", step = "1", value = "0" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.UnitsOnOrder, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label for="tf8">Tình trạng hàng</label>
                                    <div class="custom-control custom-switch">
                                        @Html.EditorFor(model => model.Discontinued, new { htmlAttributes = new { @class = "custom-control-input", id = "customSwitch1", type = "checkbox" } })
                                        <label class="custom-control-label" for="customSwitch1">Ngừng bán</label>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Discontinued, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label for="tf9">Mô tả đơn hàng</label>
                                    <textarea class="form-control" id="tf9" name="ProductDescription" rows="4">@Model.ProductDescription</textarea>
                                    @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <div class="col-sm-9 offset-sm-3">
                                        <input type="submit" value="Lưu" class="btn btn-outline-primary" />
                                        <a href="@Url.Action("Index", "Products")" class="btn btn-secondary ms-2">Quay về danh sách</a>
                                    </div>
                                </div>
                            </fieldset>}
                    </div>

                    <div class="col-md-4 d-flex flex-column align-items-center">
                        <div class="text-center">
                            @if (Model.Images != null && Model.Images.Any())
                            {
                                var img = Model.Images.First();
                                <img id="previewImage" src="@Url.Content("~/Content/Images/" + img.ImageName)" alt="Product Image" class="img-fluid rounded shadow-sm" style="max-height:300px;" /> }
                            else
                            {
                                <span>Không có hình ảnh</span>}
                        </div>

                        <div class="form-group mt-3">
                            <label for="tf10">Tải lên hình ảnh</label>
                            <div class="custom-file">
                                <input type="file" class="custom-file-input" id="tf10" name="ImageFile" accept="image/*" onchange="previewImage(event)">
                                <label class="custom-file-label" for="tf10">Choose file</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementById('previewImage');
            output.src = reader.result;
        };
        reader.readAsDataURL(event.target.files[0]);
    }
</script>