@model PagedList.IPagedList<BTLWebMVC.Models.Product>
@using PagedList.Mvc
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Layoutmanager.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

<div class="content-wrapper">
    <div style="margin:0.3cm;">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2 class="mb-4">Thông tin sản phẩm</h2>
            <a href="@Url.Action("Create", "Products")" class="btn btn-success">Thêm mới</a>
        </div>

        <div class="card shadow-sm">
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead class="thead-light" style="white-space: nowrap;">
                        <tr>
                            <th>Loại sản phẩm</th>
                            <th>Nhà cung cấp</th>
                            <th>Tên sản phẩm</th>
                            <th>Giá</th>
                            <th>Số lượng tồn kho</th>
                            <th>Số lượng đặt hàng</th>
                            <th>Tình trạng</th>
                            <th>Hình ảnh</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Category.CategoryName)</td>
                                <td>@Html.DisplayFor(modelItem => item.Supplier.SupplierName)</td>
                                <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                                <td>@item.UnitPrice.ToString("N0") VND</td>
                                <td>@Html.DisplayFor(modelItem => item.UnitsInStock)</td>
                                <td>@Html.DisplayFor(modelItem => item.UnitsOnOrder)</td>
                                <td>
                                    @if (item.Discontinued)
                                    {
                                        <span class="badge bg-danger">Ngừng bán</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">Còn hàng</span>
                                    }
                                </td>
                                <td>
                                    @if (item.Images != null && item.Images.Any())
                                    {
                                        var image = item.Images.FirstOrDefault();
                                        <img src="@Url.Content("~/Content/Images/" + image.ImageName)" alt="Product Image" style="height: 60px;" />
                                    }
                                    else
                                    {
                                        <span>No Image</span>
                                    }
                                </td>
                                <td style="white-space: nowrap;">
                                    <a href="@Url.Action("Edit", "Products", new { id = item.ProductID })" class="btn btn-primary btn-sm" title="Sửa">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    <a href="@Url.Action("Details", "Products", new { id = item.ProductID })" class="btn btn-info btn-sm" title="Chi tiết">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    <a href="@Url.Action("Delete", "Products", new { id = item.ProductID })" class="btn btn-danger btn-sm" title="Xóa">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- PHÂN TRANG -->
        <nav aria-label="Page navigation example" class="mt-3">
            <ul class="pagination justify-content-center">
                <!-- Nút Previous -->
                <li class="page-item @(Model.IsFirstPage ? "disabled" : "")">
                    <a class="page-link" href="@(Model.IsFirstPage ? "#" : Url.Action("Index", new { page = Model.PageNumber - 1 }))"
                       tabindex="@(Model.IsFirstPage ? "-1" : "0")"
                       aria-disabled="@(Model.IsFirstPage ? "true" : "false")">
                        <i class="fas fa-chevron-left"></i> Trang trước
                    </a>
                </li>

                <!-- Các trang số (hiển thị tối đa 5 trang gần trang hiện tại) -->
                @{
                    int maxPagesToShow = 5; // Tối đa 5 số trang
                    int pagesBeforeAfter = maxPagesToShow / 2; // 2 trang trước, 2 trang sau
                    int startPage = Math.Max(1, Model.PageNumber - pagesBeforeAfter);
                    int endPage = Math.Min(Model.PageCount, startPage + maxPagesToShow - 1);

                    // Điều chỉnh nếu gần cuối
                    if (endPage - startPage + 1 < maxPagesToShow)
                    {
                        startPage = Math.Max(1, endPage - maxPagesToShow + 1);
                    }
                }
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                    </li>
                }

                <!-- Nút Next -->
                <li class="page-item @(Model.IsLastPage ? "disabled" : "")">
                    <a class="page-link" href="@(Model.IsLastPage ? "#" : Url.Action("Index", new { page = Model.PageNumber + 1 }))"
                       tabindex="@(Model.IsLastPage ? "-1" : "0")"
                       aria-disabled="@(Model.IsLastPage ? "true" : "false")">
                        Trang sau <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>
    </div>

    <!-- Toast thông báo -->
    <div class="toast" id="notificationToast" style="position: fixed; bottom: 20px; right: 20px; min-width: 250px;" data-delay="3000">
        <div class="toast-header">
            <strong class="mr-auto" id="toastTitle"></strong>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
        </div>
        <div class="toast-body" id="toastMessage"></div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Hiển thị toast nếu có TempData
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';
            if (successMessage) {
                showToast('Thành công', successMessage, 'bg-success');
            }
            if (errorMessage) {
                showToast('Lỗi', errorMessage, 'bg-danger');
            }

            // Hàm hiển thị toast
            function showToast(title, message, bgClass) {
                $('#toastTitle').text(title);
                $('#toastMessage').text(message);
                $('#notificationToast').removeClass('bg-success bg-danger').addClass(bgClass);
                $('#notificationToast').toast('show');
            }
        });
    </script>
}